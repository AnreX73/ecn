# Generated by Django 4.1.4 on 2023-03-09 10:59

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('ecn', '0007_bath_contacts_electricity_forestnearly_gallery_and_more'), ('ecn', '0008_alter_outcityobject_land_square'), ('ecn', '0009_alter_contacts_image_alter_gallery_gallery_image_and_more'), ('ecn', '0010_alter_contacts_image_alter_gallery_gallery_image_and_more'), ('ecn', '0011_alter_incityobject_estate_agent'), ('ecn', '0012_alter_incityobject_estate_agent_and_more'), ('ecn', '0013_alter_user_phone_number'), ('ecn', '0014_alter_gallery_gallerylink_and_more'), ('ecn', '0015_alter_gallery_gallery_image'), ('ecn', '0016_commercial_commercialobject_delete_contacts_and_more'), ('ecn', '0017_remove_commercialobject_slug_gallerycomercial'), ('ecn', '0018_alter_commercialobject_options_and_more')]

    dependencies = [
        ('ecn', '0001_squashed_0006_newbuilding'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Баня')),
            ],
            options={
                'verbose_name': 'Баня',
                'verbose_name_plural': 'Баня',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='название')),
                ('image', models.ImageField(blank=True, upload_to='images/%Y/%m/%d', verbose_name='Изображение')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='описание если есть')),
                ('extra_description', models.TextField(blank=True, verbose_name='описание дополнительное')),
                ('is_published', models.BooleanField(default=True, verbose_name='Публикация')),
            ],
            options={
                'verbose_name': 'контактную информацию',
                'verbose_name_plural': 'Контакты',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Electricity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Электроснабжение')),
            ],
            options={
                'verbose_name': 'Электроснабжение',
                'verbose_name_plural': 'Электроснабжение',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ForestNearly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Лес рядом')),
            ],
            options={
                'verbose_name': 'Лес рядом',
                'verbose_name_plural': 'Лес рядом',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gallery_image', models.ImageField(blank=True, upload_to='images/%Y/%m/%d', verbose_name='Фото')),
                ('note', models.CharField(blank=True, max_length=100, verbose_name='примечание')),
                ('is_published', models.BooleanField(default=True, verbose_name='Публикация')),
            ],
            options={
                'verbose_name': 'фотографию объекта',
                'verbose_name_plural': 'фото объекта',
                'ordering': ['galleryLink'],
            },
        ),
        migrations.CreateModel(
            name='Gallery2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gallery_image2', models.ImageField(blank=True, upload_to='images/%Y/%m/%d', verbose_name='Фото')),
                ('note2', models.CharField(blank=True, max_length=100, verbose_name='примечание')),
                ('is_published', models.BooleanField(default=True, verbose_name='Публикация')),
            ],
            options={
                'verbose_name': 'фото объекта',
                'verbose_name_plural': 'фото загородного объекта',
                'ordering': ['galleryLink2'],
            },
        ),
        migrations.CreateModel(
            name='Garage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Гараж')),
            ],
            options={
                'verbose_name': 'Гараж',
                'verbose_name_plural': 'Гараж',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Gas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Газ')),
            ],
            options={
                'verbose_name': 'Газ',
                'verbose_name_plural': 'Газ',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='GoodRoad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Асфальтовая дорога')),
            ],
            options={
                'verbose_name': 'Асфальтовая дорога',
                'verbose_name_plural': 'Асфальтовая дорога',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Graphics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='images/%Y/%m/%d', verbose_name='изображение')),
                ('description', models.CharField(max_length=55, verbose_name='описание изображения')),
                ('note', ckeditor.fields.RichTextField(blank=True, verbose_name='примечание')),
                ('is_published', models.BooleanField(default=True, verbose_name='Публикация')),
            ],
            options={
                'verbose_name': 'графический объект',
                'verbose_name_plural': 'Графика и т.п.',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Greenhouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Теплица')),
            ],
            options={
                'verbose_name': 'Теплица',
                'verbose_name_plural': 'Теплица',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='InCityObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('slug', models.SlugField(max_length=150, unique=True, verbose_name='URL')),
                ('price', models.CharField(max_length=255, verbose_name='Цена')),
                ('image', models.ImageField(blank=True, upload_to='images', verbose_name='Основное изображение')),
                ('sale_or_rent', models.CharField(choices=[('s', 'Продажа'), ('r', 'Аренда')], default='s', max_length=25, verbose_name='Продажа или аренда')),
                ('is_hot', models.BooleanField(default=False, help_text='если хотите видеть на главной странице', verbose_name='горячий вариант')),
                ('object_adress', models.CharField(blank=True, help_text='необязательно', max_length=255, verbose_name='адрес объекта')),
                ('metro_distance', models.CharField(blank=True, max_length=255, verbose_name='расстояние до метро')),
                ('square', models.PositiveIntegerField(blank=True, verbose_name='общая площадь кв.м')),
                ('live_square', models.PositiveIntegerField(blank=True, verbose_name='жилая площадь')),
                ('kitchen', models.PositiveIntegerField(blank=True, verbose_name='площадь кухни')),
                ('rooms_layout', models.CharField(blank=True, max_length=255, verbose_name='планировка')),
                ('floor', models.PositiveIntegerField(blank=True, default=1, verbose_name='Этаж')),
                ('all_floor', models.PositiveIntegerField(blank=True, null=True, verbose_name='Этажность дома')),
                ('year', models.CharField(blank=True, max_length=25, verbose_name='Год постройки / Сдачи')),
                ('content', ckeditor.fields.RichTextField(blank=True, verbose_name='текстовое описание ')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('is_published', models.BooleanField(default=True, verbose_name='Публикация')),
                ('balcony', models.ForeignKey(default=2, on_delete=django.db.models.deletion.PROTECT, to='ecn.balcony', verbose_name='балкон')),
                ('bathroom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.bathroomtype', verbose_name='санузел')),
                ('city_region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='region', to='ecn.incityregion', verbose_name='район города')),
                ('construction', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.objectconstruction', verbose_name='тип постройки')),
                ('elevator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.elevatortype', verbose_name='лифт')),
                ('estate_agent', models.ForeignKey(help_text='специалист по объекту', on_delete=django.db.models.deletion.CASCADE, related_name='realtor', to=settings.AUTH_USER_MODEL, verbose_name='агент по недвижимости')),
                ('metro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.metrostation', verbose_name='станция метро')),
                ('object_type', models.ForeignKey(help_text='выберете тип объекта', on_delete=django.db.models.deletion.PROTECT, related_name='obj_type', to='ecn.incityobjecttype', verbose_name='тип объекта')),
            ],
            options={
                'verbose_name': 'объект',
                'verbose_name_plural': 'объект в городе',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Landings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Посадки')),
            ],
            options={
                'verbose_name': 'Посадки',
                'verbose_name_plural': 'Посадки',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='OutCityObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('slug', models.SlugField(max_length=150, unique=True, verbose_name='URL')),
                ('price', models.CharField(max_length=255, verbose_name='Цена')),
                ('image', models.ImageField(blank=True, upload_to='images', verbose_name='Основное изображение')),
                ('is_hot', models.BooleanField(default=False, verbose_name='горячий вариант')),
                ('object_adress', models.CharField(blank=True, max_length=255, verbose_name='адрес объекта')),
                ('city_distance', models.CharField(blank=True, max_length=255, verbose_name='расстояние до города')),
                ('land_square', models.DecimalField(blank=True, decimal_places=2, help_text='в сотках, 2 знака после запятой', max_digits=4, verbose_name='площадь участка')),
                ('square', models.PositiveIntegerField(blank=True, help_text='в кв.м', verbose_name='площадь дома')),
                ('year', models.CharField(blank=True, max_length=25, verbose_name='год постройки')),
                ('transport_distance', models.CharField(blank=True, max_length=255, verbose_name='расстояние до транспорта')),
                ('content', ckeditor.fields.RichTextField(blank=True, verbose_name='текстовое описание')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('is_published', models.BooleanField(default=True, verbose_name='Публикация')),
                ('bath', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.bath', verbose_name='Баня')),
                ('bathroom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.bathroomtype', verbose_name='Туалет')),
                ('construction', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.objectconstruction', verbose_name='тип постройки')),
                ('electricity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.electricity', verbose_name='Электричество')),
                ('estate_agent', models.ForeignKey(help_text='специалист по объекту', on_delete=django.db.models.deletion.CASCADE, related_name='estate_agent', to=settings.AUTH_USER_MODEL, verbose_name='агент по недвижимости')),
                ('forest_nearly', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.forestnearly', verbose_name='Лес рядом')),
                ('garage', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.garage', verbose_name='Гараж')),
                ('gas', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.gas', verbose_name='Газ')),
                ('good_road', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.goodroad', verbose_name='Асфальтовая дорога')),
                ('greenhouse', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.greenhouse', verbose_name='Теплица')),
                ('landings', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.landings', verbose_name='Посадки')),
            ],
            options={
                'verbose_name': 'Загородный объект',
                'verbose_name_plural': 'Загородный объект',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='OutCityObjectType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Тип загородного объекта')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='URL')),
                ('icon', models.ImageField(blank=True, upload_to='images/%Y/%m/%d', verbose_name='иконка(картинка) для типа объекта')),
                ('in_main_page', models.BooleanField(default=True, verbose_name='в меню на главной странице')),
            ],
            options={
                'verbose_name': 'Тип загородного объекта',
                'verbose_name_plural': 'Тип загородного объекта',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Заголовок статьи')),
                ('content', ckeditor.fields.RichTextField(blank=True, verbose_name='текст статьи')),
            ],
            options={
                'verbose_name': 'Статью',
                'verbose_name_plural': 'Статьи',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Security',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Охрана')),
            ],
            options={
                'verbose_name': 'Охрана',
                'verbose_name_plural': 'Охрана',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ShopNearly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Магазин рядом')),
            ],
            options={
                'verbose_name': 'Магазин рядом',
                'verbose_name_plural': 'Магазин рядом',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TypeOfOwnership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=155, verbose_name='форма собственности')),
            ],
            options={
                'verbose_name': 'форму собственности',
                'verbose_name_plural': 'форма собственности',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Water',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Вода')),
            ],
            options={
                'verbose_name': 'Вода',
                'verbose_name_plural': 'Вода',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='WaterNearly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Водоем рядом')),
            ],
            options={
                'verbose_name': 'Водоем рядом',
                'verbose_name_plural': 'Водоем рядом',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='WinterAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Доступ зимой')),
            ],
            options={
                'verbose_name': 'Доступ зимой',
                'verbose_name_plural': 'Доступ зимой',
                'ordering': ['id'],
            },
        ),
        migrations.RemoveField(
            model_name='newbuilding',
            name='balcony',
        ),
        migrations.RemoveField(
            model_name='newbuilding',
            name='bathroom',
        ),
        migrations.RemoveField(
            model_name='newbuilding',
            name='city_region',
        ),
        migrations.RemoveField(
            model_name='newbuilding',
            name='complex_name',
        ),
        migrations.RemoveField(
            model_name='newbuilding',
            name='construction',
        ),
        migrations.RemoveField(
            model_name='newbuilding',
            name='developer_name',
        ),
        migrations.RemoveField(
            model_name='newbuilding',
            name='elevator',
        ),
        migrations.RemoveField(
            model_name='newbuilding',
            name='estate_agent',
        ),
        migrations.RemoveField(
            model_name='newbuilding',
            name='metro',
        ),
        migrations.RemoveField(
            model_name='newbuilding',
            name='rooms',
        ),
        migrations.RemoveField(
            model_name='residentialcomplex',
            name='developer_name',
        ),
        migrations.RemoveField(
            model_name='secondaryobject',
            name='balcony',
        ),
        migrations.RemoveField(
            model_name='secondaryobject',
            name='bathroom',
        ),
        migrations.RemoveField(
            model_name='secondaryobject',
            name='city_region',
        ),
        migrations.RemoveField(
            model_name='secondaryobject',
            name='construction',
        ),
        migrations.RemoveField(
            model_name='secondaryobject',
            name='elevator',
        ),
        migrations.RemoveField(
            model_name='secondaryobject',
            name='estate_agent',
        ),
        migrations.RemoveField(
            model_name='secondaryobject',
            name='metro',
        ),
        migrations.RemoveField(
            model_name='secondaryobject',
            name='object_type',
        ),
        migrations.RemoveField(
            model_name='secondaryobject',
            name='rooms',
        ),
        migrations.RemoveField(
            model_name='secondaryobject',
            name='state',
        ),
        migrations.AlterField(
            model_name='roomamount',
            name='room_amount',
            field=models.PositiveIntegerField(default=1, unique=True, verbose_name='Кол-во комнат цифрами'),
        ),
        migrations.AlterField(
            model_name='roomamount',
            name='slug',
            field=models.SlugField(default='no_slug', max_length=150, verbose_name='URL'),
        ),
        migrations.DeleteModel(
            name='Developer',
        ),
        migrations.DeleteModel(
            name='NewBuilding',
        ),
        migrations.DeleteModel(
            name='ResidentialComplex',
        ),
        migrations.DeleteModel(
            name='SecondaryObject',
        ),
        migrations.AddField(
            model_name='outcityobject',
            name='object_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='obj_type', to='ecn.outcityobjecttype', verbose_name='тип объекта'),
        ),
        migrations.AddField(
            model_name='outcityobject',
            name='security',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.security', verbose_name='Охрана'),
        ),
        migrations.AddField(
            model_name='outcityobject',
            name='shop_nearly',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.shopnearly', verbose_name='Магазин рядом'),
        ),
        migrations.AddField(
            model_name='outcityobject',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.flatstate', verbose_name='состояние'),
        ),
        migrations.AddField(
            model_name='outcityobject',
            name='type_of_ownership',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.typeofownership', verbose_name='форма собственности'),
        ),
        migrations.AddField(
            model_name='outcityobject',
            name='water',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.water', verbose_name='Вода'),
        ),
        migrations.AddField(
            model_name='outcityobject',
            name='water_nearly',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.waternearly', verbose_name='Водоем рядом'),
        ),
        migrations.AddField(
            model_name='outcityobject',
            name='winter_access',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.winteraccess', verbose_name='Доступ зимой'),
        ),
        migrations.AddField(
            model_name='incityobject',
            name='rooms',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rooms', to='ecn.roomamount', verbose_name='количество комнат'),
        ),
        migrations.AddField(
            model_name='incityobject',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.flatstate', verbose_name='состояние'),
        ),
        migrations.AlterField(
            model_name='outcityobject',
            name='land_square',
            field=models.DecimalField(blank=True, decimal_places=1, help_text='в сотках, 2 знака после запятой', max_digits=4, verbose_name='площадь участка'),
        ),
        migrations.AlterField(
            model_name='incityobject',
            name='image',
            field=models.ImageField(blank=True, upload_to="upload_to='images/%Y/%m/%d", verbose_name='Основное изображение'),
        ),
        migrations.AlterField(
            model_name='incityobjecttype',
            name='icon',
            field=models.ImageField(blank=True, upload_to="upload_to='images/%Y/%m/%d", verbose_name='иконка(картинка) для типа объекта'),
        ),
        migrations.AlterField(
            model_name='outcityobject',
            name='image',
            field=models.ImageField(blank=True, upload_to="upload_to='images/%Y/%m/%d", verbose_name='Основное изображение'),
        ),
        migrations.AlterField(
            model_name='incityobject',
            name='image',
            field=models.ImageField(blank=True, upload_to='images/%Y/%m/%d', verbose_name='Основное изображение'),
        ),
        migrations.AlterField(
            model_name='incityobjecttype',
            name='icon',
            field=models.ImageField(blank=True, upload_to='images/%Y/%m/%d', verbose_name='иконка(картинка) для типа объекта'),
        ),
        migrations.AlterField(
            model_name='outcityobject',
            name='image',
            field=models.ImageField(blank=True, upload_to='images/%Y/%m/%d', verbose_name='Основное изображение'),
        ),
        migrations.AlterField(
            model_name='incityobject',
            name='estate_agent',
            field=models.ForeignKey(default=1, help_text='специалист по объекту', on_delete=django.db.models.deletion.CASCADE, related_name='realtor', to=settings.AUTH_USER_MODEL, verbose_name='агент по недвижимости'),
        ),
        migrations.AlterField(
            model_name='incityobject',
            name='estate_agent',
            field=models.ForeignKey(blank=True, default=1, help_text='специалист по объекту', on_delete=django.db.models.deletion.CASCADE, related_name='realtor', to=settings.AUTH_USER_MODEL, verbose_name='агент по недвижимости'),
        ),
        migrations.AlterField(
            model_name='incityobject',
            name='slug',
            field=models.SlugField(blank=True, max_length=150, unique=True, verbose_name='URL'),
        ),
        migrations.AlterField(
            model_name='user',
            name='phone_number',
            field=models.CharField(blank=True, max_length=30, verbose_name='телефон для связи'),
        ),
        migrations.AddField(
            model_name='gallery',
            name='galleryLink',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecn.incityobject', verbose_name='Ссылка на объект'),
        ),
        migrations.AddField(
            model_name='gallery2',
            name='galleryLink2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecn.outcityobject', verbose_name='Ссылка на объект'),
        ),
        migrations.AlterField(
            model_name='gallery',
            name='gallery_image',
            field=models.ImageField(blank=True, null=True, upload_to='images/%Y/%m/%d', verbose_name='Фото'),
        ),
        migrations.CreateModel(
            name='Commercial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='Заголовок')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/%Y/%m/%d', verbose_name='иллюстрация')),
                ('video', models.FileField(blank=True, null=True, upload_to='images/%Y/%m/%d', verbose_name='видео (если есть)')),
                ('post', ckeditor.fields.RichTextField(blank=True, verbose_name='рекламная статья')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('is_published', models.BooleanField(default=True, verbose_name='Публикация')),
            ],
            options={
                'verbose_name': 'Реклама',
                'verbose_name_plural': 'Рекламные статьи',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CommercialObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('price', models.CharField(max_length=255, verbose_name='Цена')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/%Y/%m/%d', verbose_name='Основное изображение')),
                ('object_adress', models.CharField(blank=True, help_text='необязательно', max_length=255, verbose_name='адрес объекта')),
                ('square', models.PositiveIntegerField(blank=True, verbose_name='общая площадь кв.м')),
                ('live_square', models.PositiveIntegerField(blank=True, verbose_name='жилая площадь')),
                ('kitchen', models.PositiveIntegerField(blank=True, verbose_name='площадь кухни')),
                ('floor', models.PositiveIntegerField(blank=True, default=1, verbose_name='Этаж')),
                ('all_floor', models.PositiveIntegerField(blank=True, null=True, verbose_name='Этажность дома')),
                ('year', models.CharField(blank=True, max_length=25, verbose_name='Год постройки / Сдачи')),
                ('content', ckeditor.fields.RichTextField(blank=True, verbose_name='текстовое описание ')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('is_published', models.BooleanField(default=True, verbose_name='Публикация')),
                ('bathroom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.bathroomtype', verbose_name='санузел')),
                ('city_region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='region_of_city', to='ecn.incityregion', verbose_name='район города')),
                ('construction', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.objectconstruction', verbose_name='тип постройки')),
                ('elevator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ecn.elevatortype', verbose_name='лифт')),
                ('estate_agent', models.ForeignKey(blank=True, help_text='специалист по объекту', on_delete=django.db.models.deletion.CASCADE, related_name='com_agent', to=settings.AUTH_USER_MODEL, verbose_name='агент по недвижимости')),
                ('post_link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commercial_link', to='ecn.commercial', verbose_name='ссылка на статью')),
                ('rooms', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rooms_amount', to='ecn.roomamount', verbose_name='количество комнат')),
            ],
            options={
                'verbose_name': 'рекламный объект',
                'verbose_name_plural': 'Рекламные объекты',
                'ordering': ['id'],
            },
        ),
        migrations.DeleteModel(
            name='Contacts',
        ),
        migrations.AlterField(
            model_name='outcityobject',
            name='land_square',
            field=models.CharField(blank=True, max_length=50, verbose_name='площадь участка'),
        ),
        migrations.CreateModel(
            name='GalleryComercial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('com_image', models.ImageField(blank=True, upload_to='images/%Y/%m/%d', verbose_name='Фото')),
                ('note', models.CharField(blank=True, max_length=100, verbose_name='примечание')),
                ('is_published', models.BooleanField(default=True, verbose_name='Публикация')),
                ('gallery_com_link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecn.commercialobject', verbose_name='Ссылка на объект')),
            ],
            options={
                'verbose_name': 'фото комерческого объекта',
                'verbose_name_plural': 'фото комерческих объектов',
                'ordering': ['gallery_com_link'],
            },
        ),
    ]
